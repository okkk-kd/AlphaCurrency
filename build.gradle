plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'application'
}

group = 'ru.kritinidzin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.springframework:spring-tx:5.3.20'
    compileOnly 'javax.servlet:javax.servlet-api'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.security:spring-security-web:5.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def path = projectDir
mainClassName = "ru.kritinidzin.alphacurrency.AlphaCurrencyApplication"

jar {
    manifest {
        attributes 'Main-Class': 'ru.kritinidzin.AlphaCurrency.AlphaCurrencyApplication.main'
    }
}

task copyJarToBin(type: Copy) {
    from shadowJar
    into path
}

task createImage(type: Exec) {
    createImage.dependsOn copyJarToBin
    workingDir "$path"
    commandLine "cmd","/c", 'docker', 'build', '.', '--tag', 'alpha_currency'
    ignoreExitValue true
}

task createContainer(type: Exec){
    createContainer.dependsOn createImage
    workingDir "$path"
    commandLine "cmd", "/c", 'docker', 'run', '-it', '--rm', 'alpha_currency'
    ignoreExitValue true
    doLast{
    }
}

tasks.named('test') {
    useJUnitPlatform()
}